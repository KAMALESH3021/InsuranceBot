{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamal\\\\OneDrive\\\\Desktop\\\\CHAT BOT\\\\insurance-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n\n  // Generate a unique session ID when the component mounts\n  useEffect(() => {\n    const generateSessionId = () => {\n      return Math.random().toString(36).substr(2, 9);\n    };\n    const existingSessionId = localStorage.getItem('sessionId');\n    if (existingSessionId) {\n      setSessionId(existingSessionId);\n    } else {\n      const newSessionId = generateSessionId();\n      localStorage.setItem('sessionId', newSessionId);\n      setSessionId(newSessionId);\n    }\n  }, []);\n  const handleSend = async () => {\n    if (question.trim() && sessionId) {\n      try {\n        const res = await axios.post(\"http://localhost:8000/ask\", {\n          question,\n          session_id: sessionId\n        });\n        const botResponse = res.data.response;\n        const newConversation = [...conversation, {\n          question,\n          botResponse\n        }];\n        setConversation(newConversation);\n        setResponse(botResponse);\n        setQuestion(''); // Clear input field\n      } catch (error) {\n        console.error('Error fetching response:', error);\n        if (error.response && error.response.data) {\n          setResponse(`Error: ${error.response.data.detail}`); // Specific error\n        } else {\n          setResponse('Error fetching response.');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insurance Agent Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 43\n          }, this), \" \", msg.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 42\n          }, this), \" \", msg.botResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && handleSend() // Send on Enter\n      ,\n      placeholder: \"Ask me something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Bot Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this), \" \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FtNSoqxKxoYIT0KcWQK6mO00fl0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","question","setQuestion","response","setResponse","conversation","setConversation","sessionId","setSessionId","generateSessionId","Math","random","toString","substr","existingSessionId","localStorage","getItem","newSessionId","setItem","handleSend","trim","res","post","session_id","botResponse","data","newConversation","error","console","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kamal/OneDrive/Desktop/CHAT BOT/insurance-bot/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n\n  // Generate a unique session ID when the component mounts\n  useEffect(() => {\n    const generateSessionId = () => {\n      return Math.random().toString(36).substr(2, 9);\n    };\n\n    const existingSessionId = localStorage.getItem('sessionId');\n    if (existingSessionId) {\n      setSessionId(existingSessionId);\n    } else {\n      const newSessionId = generateSessionId();\n      localStorage.setItem('sessionId', newSessionId);\n      setSessionId(newSessionId);\n    }\n  }, []);\n\n  const handleSend = async () => {\n    if (question.trim() && sessionId) {\n      try {\n        const res = await axios.post(\"http://localhost:8000/ask\", {\n          question,\n          session_id: sessionId,\n        });\n        const botResponse = res.data.response;\n\n        const newConversation = [...conversation, { question, botResponse }];\n        setConversation(newConversation);\n\n        setResponse(botResponse);\n        setQuestion(''); // Clear input field\n      } catch (error) {\n        console.error('Error fetching response:', error);\n        if (error.response && error.response.data) {\n          setResponse(`Error: ${error.response.data.detail}`); // Specific error\n        } else {\n          setResponse('Error fetching response.');\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Insurance Agent Chatbot</h1>\n      <div className=\"chat-box\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <div className=\"user-message\"><strong>User:</strong> {msg.question}</div>\n            <div className=\"bot-message\"><strong>Bot:</strong> {msg.botResponse}</div>\n          </div>\n        ))}\n      </div>\n\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && handleSend()} // Send on Enter\n        placeholder=\"Ask me something...\"\n      />\n      <button className='btn' onClick={handleSend}>Send</button>\n\n      {response && <p><strong>Bot Response:</strong> {response}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}