{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamal\\\\OneDrive\\\\Desktop\\\\CHAT BOT\\\\insurance-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const handleSend = async () => {\n    if (question.trim()) {\n      // Send question to FastAPI backend\n      const res = await axios.post(\"http://localhost:8000/ask\", {\n        question\n      });\n      const botResponse = res.data.response;\n\n      // Update conversation history\n      const newConversation = [...conversation, {\n        question,\n        botResponse\n      }];\n      setConversation(newConversation);\n\n      // Store conversation in PostgreSQL\n      await axios.post(\"http://localhost:8000/conversations\", {\n        input: question,\n        response: botResponse\n      });\n      setResponse(botResponse);\n      setQuestion('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 16\n          }, this), \" \", msg.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 16\n          }, this), \" \", msg.botResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      placeholder: \"Ask me something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bot response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }, this), \" \", response]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wN77MmcdOaGV9UIrX3p2RiktUF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","question","setQuestion","response","setResponse","conversation","setConversation","handleSend","trim","res","post","botResponse","data","newConversation","input","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kamal/OneDrive/Desktop/CHAT BOT/insurance-bot/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport \"./App.css\";\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [conversation, setConversation] = useState([]);\n\n  const handleSend = async () => {\n    if (question.trim()) {\n      // Send question to FastAPI backend\n      const res = await axios.post(\"http://localhost:8000/ask\", { question });\n      const botResponse = res.data.response;\n\n      // Update conversation history\n      const newConversation = [...conversation, { question, botResponse }];\n      setConversation(newConversation);\n\n      // Store conversation in PostgreSQL\n      await axios.post(\"http://localhost:8000/conversations\", {\n        input: question,\n        response: botResponse\n      });\n\n      setResponse(botResponse);\n      setQuestion('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chatbot</h1>\n      <div className=\"chat-box\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <p><strong>User:</strong> {msg.question}</p>\n            <p><strong>Bot:</strong> {msg.botResponse}</p>\n          </div>\n        ))}\n      </div>\n\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        placeholder=\"Ask me something...\"\n      />\n      <button className='btn' onClick={handleSend}>Send</button>\n\n      {response && (\n        <div className=\"response-box\">\n          <p><strong>Bot response:</strong> {response}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}