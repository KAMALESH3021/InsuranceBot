{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamal\\\\OneDrive\\\\Desktop\\\\CHAT BOT\\\\insurance-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false); // New loading state\n  const [error, setError] = useState(null); // New error state\n\n  // You can use a fixed session_id for simplicity, or generate a unique one per user session\n  const sessionId = \"session1\"; // Static session ID for now\n\n  const handleSend = async () => {\n    if (question.trim()) {\n      setLoading(true); // Set loading to true while fetching\n      setError(null); // Reset error before sending a new request\n      try {\n        // Send question along with session_id to FastAPI backend\n        const res = await axios.post(\"http://localhost:8000/ask\", {\n          question: question,\n          session_id: sessionId\n        });\n        const botResponse = res.data.response;\n\n        // Update conversation history\n        const newConversation = [...conversation, {\n          question,\n          botResponse\n        }];\n        setConversation(newConversation);\n        setResponse(botResponse);\n        setQuestion(\"\"); // Clear input field after sending\n      } catch (error) {\n        console.error(\"Error fetching response:\", error);\n        setError(\"Error fetching response. Please try again.\"); // Display error\n      } finally {\n        setLoading(false); // Stop loading when done\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), \" \", msg.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), \" \", msg.botResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      placeholder: \"Ask me something...\",\n      disabled: loading // Disable input while loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSend,\n      disabled: loading || !question.trim(),\n      children: [loading ? \"Sending...\" : \"Send\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y1Obgr65YbDsnAKcDixCuF6Odm8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","question","setQuestion","response","setResponse","conversation","setConversation","loading","setLoading","error","setError","sessionId","handleSend","trim","res","post","session_id","botResponse","data","newConversation","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kamal/OneDrive/Desktop/CHAT BOT/insurance-bot/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false); // New loading state\n  const [error, setError] = useState(null); // New error state\n\n  // You can use a fixed session_id for simplicity, or generate a unique one per user session\n  const sessionId = \"session1\"; // Static session ID for now\n\n  const handleSend = async () => {\n    if (question.trim()) {\n      setLoading(true); // Set loading to true while fetching\n      setError(null); // Reset error before sending a new request\n      try {\n        // Send question along with session_id to FastAPI backend\n        const res = await axios.post(\"http://localhost:8000/ask\", {\n          question: question,\n          session_id: sessionId,\n        });\n\n        const botResponse = res.data.response;\n\n        // Update conversation history\n        const newConversation = [...conversation, { question, botResponse }];\n        setConversation(newConversation);\n\n        setResponse(botResponse);\n        setQuestion(\"\"); // Clear input field after sending\n      } catch (error) {\n        console.error(\"Error fetching response:\", error);\n        setError(\"Error fetching response. Please try again.\"); // Display error\n      } finally {\n        setLoading(false); // Stop loading when done\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chatbot</h1>\n\n      {/* Chat history */}\n      <div className=\"chat-box\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <p>\n              <strong>User:</strong> {msg.question}\n            </p>\n            <p>\n              <strong>Bot:</strong> {msg.botResponse}\n            </p>\n          </div>\n        ))}\n      </div>\n\n      {/* Input box */}\n      <input\n        type=\"text\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n        placeholder=\"Ask me something...\"\n        disabled={loading} // Disable input while loading\n      />\n\n      {/* Send button */}\n      <button\n        className=\"btn\"\n        onClick={handleSend}\n        disabled={loading || !question.trim()}\n      >\n        {loading ? \"Sending...\" : \"Send\"} {/* Indicate loading */}\n      </button>\n\n      {/* Error message */}\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}